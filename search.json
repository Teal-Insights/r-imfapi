[{"path":"https://teal-insights.github.io/r-imfapi/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2025 Teal Insights Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://teal-insights.github.io/r-imfapi/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Teal Insights. Author, maintainer, copyright holder.","code":""},{"path":"https://teal-insights.github.io/r-imfapi/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Teal Insights (2025). imfapi: Econdataverse IMF API Client. R package version 0.0.0.1, https://teal-insights.github.io/r-imfapi/.","code":"@Manual{,   title = {imfapi: Econdataverse IMF API Client},   author = {{Teal Insights}},   year = {2025},   note = {R package version 0.0.0.1},   url = {https://teal-insights.github.io/r-imfapi/}, }"},{"path":[]},{"path":"https://teal-insights.github.io/r-imfapi/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Econdataverse IMF API Client","text":"","code":"install.packages(\"imfapi\")"},{"path":"https://teal-insights.github.io/r-imfapi/index.html","id":"usage","dir":"","previous_headings":"","what":"Usage","title":"Econdataverse IMF API Client","text":"imfapi package provides four-step workflow retrieving data IMF’s SDMX API:","code":"library(imfapi)"},{"path":"https://teal-insights.github.io/r-imfapi/index.html","id":"step-1-list-available-dataflows-and-select-one","dir":"","previous_headings":"Usage","what":"Step 1: List available dataflows and select one","title":"Econdataverse IMF API Client","text":"Start listing available IMF datasets (dataflows) find one need: Choose dataflow based id, name, description. example, ’ll use “PPI” (Producer Price Index) dataflow.","code":"imf_get_dataflows() |>   head() |>   # Note: We use a custom helper function to truncate long strings in columns   truncate_text(max_chars = 10) |>   knitr::kable()"},{"path":"https://teal-insights.github.io/r-imfapi/index.html","id":"step-2-get-the-dimensions-for-filtering","dir":"","previous_headings":"Usage","what":"Step 2: Get the dimensions for filtering","title":"Econdataverse IMF API Client","text":"dataflow datastructure defines dimensions can filter . Use imf_get_datastructure() see dimensions available: dimension_id column shows filter dimensions can use (e.g., COUNTRY, FREQUENCY). Set include_time = TRUE see time dimensions include_measures = TRUE see measure dimensions.","code":"imf_get_datastructure(   \"PPI\", include_time = TRUE, include_measures = TRUE ) |>   knitr::kable()"},{"path":"https://teal-insights.github.io/r-imfapi/index.html","id":"step-3-fetch-codelists-for-dimensions-you-want-to-filter-on","dir":"","previous_headings":"Usage","what":"Step 3: Fetch codelists for dimensions you want to filter on","title":"Econdataverse IMF API Client","text":"dimension want filter, retrieve codelist see valid codes can use: code column shows values ’ll use filters (e.g., “USA”, “CAN”). name column provides human-readable labels. can request codelists multiple dimensions passing vector dimension IDs.","code":"imf_get_codelists(dimension_ids = c(\"COUNTRY\"), dataflow_id = \"PPI\") |>   head() |>   truncate_text(max_chars = 10) |>   knitr::kable()"},{"path":"https://teal-insights.github.io/r-imfapi/index.html","id":"step-4-request-data-with-your-filters","dir":"","previous_headings":"Usage","what":"Step 4: Request data with your filters","title":"Econdataverse IMF API Client","text":"Finally, use imf_get() fetch actual data. Pass named list dimension filters name dimension_id value character vector codes: can also use start_period end_period arguments filter time (e.g., start_period = \"2015\", end_period = \"2020\"). omit dimension dimensions list, values dimension included.","code":"imf_get(   dataflow_id = \"PPI\",   dimensions = list(FREQUENCY = c(\"A\"), COUNTRY = c(\"USA\", \"CAN\")) ) |>   head() ## # A tibble: 6 × 6 ##   COUNTRY INDICATOR TYPE_OF_TRANSFORMATION FREQUENCY TIME_PERIOD OBS_VALUE ##   <chr>   <chr>     <chr>                  <chr>     <chr>           <dbl> ## 1 CAN     PPI       IX                     A         1956             15.8 ## 2 CAN     PPI       IX                     A         1957             16.1 ## 3 CAN     PPI       IX                     A         1958             16.2 ## 4 CAN     PPI       IX                     A         1959             16.4 ## 5 CAN     PPI       IX                     A         1960             16.4 ## 6 CAN     PPI       IX                     A         1961             16.4"},{"path":"https://teal-insights.github.io/r-imfapi/reference/imf_get.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve data from an IMF dataset — imf_get","title":"Retrieve data from an IMF dataset — imf_get","text":"Fetches observations given dataflow_id resource_id IMF SDMX 3.0 Data API. request key constructed dataset's datastructure (DSD) using positional order dimensions. Time filtering applied via query parameters.","code":""},{"path":"https://teal-insights.github.io/r-imfapi/reference/imf_get.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve data from an IMF dataset — imf_get","text":"","code":"imf_get(   dataflow_id,   dimensions = list(),   start_period = NULL,   end_period = NULL,   progress = FALSE,   max_tries = 10L,   cache = TRUE )"},{"path":"https://teal-insights.github.io/r-imfapi/reference/imf_get.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieve data from an IMF dataset — imf_get","text":"dataflow_id Character scalar. dataflow query (e.g., \"GFS\"). dimensions Named list mapping dimension IDs character vectors codes include. Omitted dimensions wildcarded key. dimension position DSD corresponds one dot-separated slot key; multiple codes per slot joined '+'. start_period Optional character. Lower bound time filtering (e.g., \"2000\", \"2000-Q1\", \"2000-01\"). end_period Optional character. Upper bound time filtering, format start_period. request always uses SDMX 3.0 dataflow context hood sets dimensionAtObservation = \"TIME_PERIOD\" request time-series view. progress Logical; whether show request progress. max_tries Integer; maximum retry attempts HTTP requests. cache Logical; whether enable caching HTTP requests.","code":""},{"path":"https://teal-insights.github.io/r-imfapi/reference/imf_get.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrieve data from an IMF dataset — imf_get","text":"tibble one row per observation, including dimension columns, time period, value column(s), requested attributes. Exact column names follow dataset's DSD may vary dataflow_id.","code":""},{"path":"https://teal-insights.github.io/r-imfapi/reference/imf_get.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Retrieve data from an IMF dataset — imf_get","text":"default, request targets agencies scope data path, assuming dataflow IDs globally unique practice. response layout uses time-series context, client code shape parsed payload tidy tibble. request key built ordering dimensions DSD position filling position either '+'-joined set selected codes blank wildcard. Time filtering applied via start_period end_period query parameters rather encoding time key.","code":""},{"path":"https://teal-insights.github.io/r-imfapi/reference/imf_get.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Retrieve data from an IMF dataset — imf_get","text":"","code":"if (curl::has_internet()) {   imf_get(     dataflow_id = \"FM\",  # Fiscal Monitor     dimensions = list(COUNTRY = c(\"USA\", \"CAN\"))   ) } #> # A tibble: 552 × 5 #>    COUNTRY INDICATOR         FREQUENCY TIME_PERIOD OBS_VALUE #>    <chr>   <chr>             <chr>     <chr>           <dbl> #>  1 CAN     CAB_S13_POPGDP_PT A         1991           -7.61  #>  2 CAN     CAB_S13_POPGDP_PT A         1992           -8.07  #>  3 CAN     CAB_S13_POPGDP_PT A         1993           -8.05  #>  4 CAN     CAB_S13_POPGDP_PT A         1994           -7.08  #>  5 CAN     CAB_S13_POPGDP_PT A         1995           -5.58  #>  6 CAN     CAB_S13_POPGDP_PT A         1996           -2.44  #>  7 CAN     CAB_S13_POPGDP_PT A         1997            0.315 #>  8 CAN     CAB_S13_POPGDP_PT A         1998            0.346 #>  9 CAN     CAB_S13_POPGDP_PT A         1999            1.29  #> 10 CAN     CAB_S13_POPGDP_PT A         2000            1.70  #> # ℹ 542 more rows"},{"path":"https://teal-insights.github.io/r-imfapi/reference/imf_get_codelists.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve codes for one or more dimensions as a tidy tibble — imf_get_codelists","title":"Retrieve codes for one or more dimensions as a tidy tibble — imf_get_codelists","text":"Returns tibble mapping dimensions codes labels fetching corresponding codelists. convention, codelist IDs assumed CL_{dimension_id} first-pass coverage.","code":""},{"path":"https://teal-insights.github.io/r-imfapi/reference/imf_get_codelists.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve codes for one or more dimensions as a tidy tibble — imf_get_codelists","text":"","code":"imf_get_codelists(   dimension_ids,   dataflow_id,   progress = FALSE,   max_tries = 10L,   cache = TRUE )"},{"path":"https://teal-insights.github.io/r-imfapi/reference/imf_get_codelists.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieve codes for one or more dimensions as a tidy tibble — imf_get_codelists","text":"dimension_ids Character vector dimension IDs (e.g., \"COUNTRY\"). dataflow_id Character scalar. dataflow whose datastructure used resolve dimension's codelist via concept scheme reference. progress Logical; whether show progress. max_tries Integer; maximum retry attempts. cache Logical; whether cache requests.","code":""},{"path":"https://teal-insights.github.io/r-imfapi/reference/imf_get_codelists.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrieve codes for one or more dimensions as a tidy tibble — imf_get_codelists","text":"tibble::tibble( dimension_id = character(), code = character(), name = character(), description = character(), codelist_id = character(), codelist_agency = character(), codelist_version = character() )","code":""},{"path":"https://teal-insights.github.io/r-imfapi/reference/imf_get_codelists.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Retrieve codes for one or more dimensions as a tidy tibble — imf_get_codelists","text":"","code":"if (curl::has_internet()) {   imf_get_codelists(     c(\"FREQUENCY\", \"TIME_PERIOD\"),     dataflow_id = \"FM\"  # Fiscal Monitor   ) } #> # A tibble: 6 × 7 #>   dimension_id code  name                description codelist_id codelist_agency #>   <chr>        <chr> <chr>               <chr>       <chr>       <chr>           #> 1 FREQUENCY    A     Annual              To be used… CL_FREQ     IMF             #> 2 FREQUENCY    D     Daily               To be used… CL_FREQ     IMF             #> 3 FREQUENCY    M     Monthly             To be used… CL_FREQ     IMF             #> 4 FREQUENCY    Q     Quarterly           To be used… CL_FREQ     IMF             #> 5 FREQUENCY    S     Half-yearly, semes… To be used… CL_FREQ     IMF             #> 6 FREQUENCY    W     Weekly              To be used… CL_FREQ     IMF             #> # ℹ 1 more variable: codelist_version <chr>"},{"path":"https://teal-insights.github.io/r-imfapi/reference/imf_get_dataflows.html","id":null,"dir":"Reference","previous_headings":"","what":"Get dataflow definitions for aLL available IMF datasets — imf_get_dataflows","title":"Get dataflow definitions for aLL available IMF datasets — imf_get_dataflows","text":"Retrieves returns available dataflow definitions SDMX dataflow endpoint.","code":""},{"path":"https://teal-insights.github.io/r-imfapi/reference/imf_get_dataflows.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get dataflow definitions for aLL available IMF datasets — imf_get_dataflows","text":"","code":"imf_get_dataflows(progress = FALSE, max_tries = 10L, cache = TRUE)"},{"path":"https://teal-insights.github.io/r-imfapi/reference/imf_get_dataflows.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get dataflow definitions for aLL available IMF datasets — imf_get_dataflows","text":"progress Logical; whether show progress. max_tries Integer; maximum retry attempts. cache Logical; whether cache request.","code":""},{"path":"https://teal-insights.github.io/r-imfapi/reference/imf_get_dataflows.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get dataflow definitions for aLL available IMF datasets — imf_get_dataflows","text":"tibble::tibble( id = character(),           # e.g., \"MFS_IR\", \"SPE\", etc. name = character(),         # English name description = character(),  # English description version = character(),      # e.g., \"8.0.1\" structure = character(),    # DSD reference last_updated = character() # annotations )","code":""},{"path":"https://teal-insights.github.io/r-imfapi/reference/imf_get_dataflows.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get dataflow definitions for aLL available IMF datasets — imf_get_dataflows","text":"","code":"if (curl::has_internet()) {   imf_get_dataflows() } #> # A tibble: 71 × 6 #>    id                  name              description version agency last_updated #>    <chr>               <chr>             <chr>       <chr>   <chr>  <chr>        #>  1 PPI                 Producer Price I… \"Producer … 3.0.0   IMF.S… 2025-03-28T… #>  2 GFS_SFCP            GFS Stocks and F… \"The Gover… 10.0.0  IMF.S… 2025-06-06T… #>  3 MFS_OFC             Monetary and Fin… \"The Monet… 6.0.1   IMF.S… 2025-08-12T… #>  4 PSBS                Public Sector Ba… \"The Publi… 2.0.0   IMF.F… 2025-04-23T… #>  5 EQ                  Export Quality (… \"This data… 2.0.0   IMF.R… 2025-03-29T… #>  6 ISORA_2016_DATA_PUB ISORA 2016 Data   \"ISORA dat… 2.0.0   ISORA  2025-06-19T… #>  7 ISORA_2018_DATA_PUB ISORA 2018 Data   \"ISORA dat… 2.0.0   ISORA  2025-06-19T… #>  8 GDD                 Global Debt Data… \"The Globa… 2.0.0   IMF.F… 2025-04-16T… #>  9 CTOT                Commodity Terms … \"CTOT is a… 5.0.0   IMF.R… 2025-06-09T… #> 10 ITG                 International Tr… \"Trade in … 4.0.0   IMF.S… 2025-03-28T… #> # ℹ 61 more rows"},{"path":"https://teal-insights.github.io/r-imfapi/reference/imf_get_datastructure.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve the datastructure definition for an IMF dataflow. — imf_get_datastructure","title":"Retrieve the datastructure definition for an IMF dataflow. — imf_get_datastructure","text":"Retrieve datastructure definition IMF dataflow.","code":""},{"path":"https://teal-insights.github.io/r-imfapi/reference/imf_get_datastructure.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve the datastructure definition for an IMF dataflow. — imf_get_datastructure","text":"","code":"imf_get_datastructure(   dataflow_id,   progress = FALSE,   max_tries = 10L,   cache = TRUE,   include_time = FALSE,   include_measures = FALSE )"},{"path":"https://teal-insights.github.io/r-imfapi/reference/imf_get_datastructure.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieve the datastructure definition for an IMF dataflow. — imf_get_datastructure","text":"dataflow_id ID dataflow retrieve datastructure . progress Logical; whether show progress. max_tries Integer; maximum retry attempts. cache Logical; whether cache request. include_time Logical; whether include time dimensions. include_measures Logical; whether include measure dimensions.","code":""},{"path":"https://teal-insights.github.io/r-imfapi/reference/imf_get_datastructure.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrieve the datastructure definition for an IMF dataflow. — imf_get_datastructure","text":"tibble::tibble( dimension_id = character(), type = character(), position = integer() )","code":""},{"path":"https://teal-insights.github.io/r-imfapi/reference/imf_get_datastructure.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Retrieve the datastructure definition for an IMF dataflow. — imf_get_datastructure","text":"","code":"if (curl::has_internet()) {   imf_get_datastructure(\"PSBS\") } #> # A tibble: 6 × 3 #>   dimension_id type      position #>   <chr>        <chr>        <int> #> 1 COUNTRY      Dimension        0 #> 2 SECTOR       Dimension        1 #> 3 ACCOUNTS     Dimension        2 #> 4 INDICATOR    Dimension        3 #> 5 UNIT         Dimension        4 #> 6 FREQUENCY    Dimension        5"},{"path":[]},{"path":"https://teal-insights.github.io/r-imfapi/news/index.html","id":"imfapi-010","dir":"Changelog","previous_headings":"","what":"imfapi 0.1.0","title":"imfapi 0.1.0","text":"Initial CRAN submission imf_get_dataflows(), imf_get_datastructure(), imf_get_codelists(), imf_get().","code":""}]
