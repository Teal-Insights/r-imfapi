[{"path":"https://teal-insights.github.io/r-imfapi/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2025 Teal Insights Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://teal-insights.github.io/r-imfapi/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Teal Insights. Author, maintainer, copyright holder.","code":""},{"path":"https://teal-insights.github.io/r-imfapi/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Teal Insights (2025). imfapi: Econdataverse IMF API Client. R package version 0.0.0.1, https://teal-insights.github.io/r-imfapi.","code":"@Manual{,   title = {imfapi: Econdataverse IMF API Client},   author = {{Teal Insights}},   year = {2025},   note = {R package version 0.0.0.1},   url = {https://teal-insights.github.io/r-imfapi}, }"},{"path":[]},{"path":"https://teal-insights.github.io/r-imfapi/reference/imf_get_codelists.html","id":null,"dir":"Reference","previous_headings":"","what":"Returns a tibble mapping dimensions to their codes and labels by fetching the corresponding codelists. By convention, codelist IDs are assumed to be CL_{dimension_id} for first-pass coverage. — imf_get_codelists","title":"Returns a tibble mapping dimensions to their codes and labels by fetching the corresponding codelists. By convention, codelist IDs are assumed to be CL_{dimension_id} for first-pass coverage. — imf_get_codelists","text":"Returns tibble mapping dimensions codes labels fetching corresponding codelists. convention, codelist IDs assumed CL_{dimension_id} first-pass coverage.","code":""},{"path":"https://teal-insights.github.io/r-imfapi/reference/imf_get_codelists.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Returns a tibble mapping dimensions to their codes and labels by fetching the corresponding codelists. By convention, codelist IDs are assumed to be CL_{dimension_id} for first-pass coverage. — imf_get_codelists","text":"","code":"imf_get_codelists(   dimension_ids,   progress = FALSE,   max_tries = 10L,   cache = TRUE )"},{"path":"https://teal-insights.github.io/r-imfapi/reference/imf_get_codelists.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Returns a tibble mapping dimensions to their codes and labels by fetching the corresponding codelists. By convention, codelist IDs are assumed to be CL_{dimension_id} for first-pass coverage. — imf_get_codelists","text":"dimension_ids Character vector dimension IDs (e.g., \"COUNTRY\"). progress Logical; whether show progress. max_tries Integer; maximum retry attempts. cache Logical; whether cache requests.","code":""},{"path":"https://teal-insights.github.io/r-imfapi/reference/imf_get_codelists.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Returns a tibble mapping dimensions to their codes and labels by fetching the corresponding codelists. By convention, codelist IDs are assumed to be CL_{dimension_id} for first-pass coverage. — imf_get_codelists","text":"tibble::tibble( dimension_id = character(), code = character(), name = character(), description = character(), codelist_id = character(), codelist_agency = character(), codelist_version = character() )","code":""},{"path":"https://teal-insights.github.io/r-imfapi/reference/imf_get_codelists.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Returns a tibble mapping dimensions to their codes and labels by fetching the corresponding codelists. By convention, codelist IDs are assumed to be CL_{dimension_id} for first-pass coverage. — imf_get_codelists","text":"","code":"if (FALSE) { # \\dontrun{ imf_get_codelists(c(\"FREQUENCY\", \"TIME_PERIOD\")) } # }"},{"path":"https://teal-insights.github.io/r-imfapi/reference/imf_get_dataflows.html","id":null,"dir":"Reference","previous_headings":"","what":"Get dataflow definitions for aLL available IMF datasets — imf_get_dataflows","title":"Get dataflow definitions for aLL available IMF datasets — imf_get_dataflows","text":"Retrieves returns available dataflow definitions SDMX dataflow endpoint.","code":""},{"path":"https://teal-insights.github.io/r-imfapi/reference/imf_get_dataflows.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get dataflow definitions for aLL available IMF datasets — imf_get_dataflows","text":"","code":"imf_get_dataflows(progress = FALSE, max_tries = 10L, cache = TRUE)"},{"path":"https://teal-insights.github.io/r-imfapi/reference/imf_get_dataflows.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get dataflow definitions for aLL available IMF datasets — imf_get_dataflows","text":"progress Logical; whether show progress. max_tries Integer; maximum retry attempts. cache Logical; whether cache request. resource Character; resource retrieve.","code":""},{"path":"https://teal-insights.github.io/r-imfapi/reference/imf_get_dataflows.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get dataflow definitions for aLL available IMF datasets — imf_get_dataflows","text":"tibble::tibble( id = character(),           # e.g., \"MFS_IR\", \"SPE\", etc. name = character(),         # English name description = character(),  # English description version = character(),      # e.g., \"8.0.1\" structure = character(),    # DSD reference last_updated = character(), # annotations stringsAsFactors = FALSE )","code":""},{"path":"https://teal-insights.github.io/r-imfapi/reference/imf_get_dataflows.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get dataflow definitions for aLL available IMF datasets — imf_get_dataflows","text":"","code":"if (FALSE) { # \\dontrun{ imf_get_dataflows() } # }"},{"path":"https://teal-insights.github.io/r-imfapi/reference/imf_get_datastructure.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve the datastructure definition for an IMF dataflow. — imf_get_datastructure","title":"Retrieve the datastructure definition for an IMF dataflow. — imf_get_datastructure","text":"Retrieve datastructure definition IMF dataflow.","code":""},{"path":"https://teal-insights.github.io/r-imfapi/reference/imf_get_datastructure.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve the datastructure definition for an IMF dataflow. — imf_get_datastructure","text":"","code":"imf_get_datastructure(   dataflow_id,   progress = FALSE,   max_tries = 10L,   cache = TRUE,   include_time = FALSE,   include_measures = FALSE )"},{"path":"https://teal-insights.github.io/r-imfapi/reference/imf_get_datastructure.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieve the datastructure definition for an IMF dataflow. — imf_get_datastructure","text":"dataflow_id ID dataflow retrieve datastructure . progress Logical; whether show progress. max_tries Integer; maximum retry attempts. cache Logical; whether cache request. include_time Logical; whether include time dimensions. include_measures Logical; whether include measure dimensions.","code":""},{"path":"https://teal-insights.github.io/r-imfapi/reference/imf_get_datastructure.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrieve the datastructure definition for an IMF dataflow. — imf_get_datastructure","text":"tibble::tibble( dimension_id = character(), type = character(), position = integer() )","code":""},{"path":"https://teal-insights.github.io/r-imfapi/reference/imf_get_datastructure.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Retrieve the datastructure definition for an IMF dataflow. — imf_get_datastructure","text":"","code":"if (FALSE) { # \\dontrun{ imf_get_datastructure(\"GFS\") } # }"}]
